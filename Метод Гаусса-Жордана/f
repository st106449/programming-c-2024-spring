#include <iostream>
#include <cmath>

double** divide(double** Matrix,int k, double R,int m)
{
    for(int i = 0;i<m;++i)
    {
        Matrix[k][i] = Matrix[k][i]/R;
    }
    return Matrix;
}
double** substract(double** Matrix, int k, int l,double R, int m)
{
    for(int i = 0; i < m; ++i)
    {
        Matrix[l][i] -= Matrix[k][i]*R;
    }
    return Matrix;
}
int MaxColInd(double** Matrix, int n, int m, int k);
double ** transform(double** Matrix, int n, int m)
{
    double* c;
    int t;
    for(int i = 0; i<m-1;++i)
    {
        c = Matrix[i];
        t = MaxColInd(Matrix, n, i,i);
        Matrix[i] = Matrix[t];
        Matrix[t] = c;
        //parallel
        for(int j = 0; j < n; ++j)
        {
            if(j != i)
            {
                Matrix = substract(Matrix, i, j, ((Matrix[j][i])/(Matrix[i][i])),m );
            }
        }
        Matrix = divide(Matrix, i, Matrix[i][i], m);
    }
    return Matrix;
}
int MaxColInd(double** Matrix, int n, int m, int k) //номер строки с максимальным элементом в столбце m между строками k и n
{
    int j = k;
    for(int i= k; i < n; ++i)
    {
        if(fabs(Matrix[j][m]) < fabs(Matrix[i][m]))
        {
            j = i;
        }
        
    }
    return j;
}

int main()
{
    int m, n;
    std::cin >> n >> m;
    double** Matrix = new double*[n];
   for(int i = 0; i<n;++i)
    {
       Matrix[i] = new double[m];
    }
    for(int i = 0;i<n;++i)
    {
        for(int j = 0;j<m;++j)
        {
            std::cin>> Matrix[i][j];
        }
        
    }
    //for(int i = 0; i<m; ++i)
    //{
    //    std::cout << Matrix[MaxColInd(Matrix,n, i, 0)][i] << std::endl;
   // }
   Matrix = transform(Matrix,n,m);
    for(int i = 0;i<n;++i)
   {
       for(int j = 0;j<m;++j)
        {
        std::cout<< Matrix[i][j]<< " ";
        }
       std::cout << std::endl;
    }
    return EXIT_SUCCESS;
}
